I"Ó<p>Itâ€™s been a while since Iâ€™ve worked on this site. Although Jekyll was relatively easy to set up direclty from Github, customizing it has been a pain. When I first forked the site a few years ago, the default theme was, and still is, Minima. And attempt to switch up the theme results in a plethora of dependency issues, whether bewteen Github pages and Jekyll, or between Github pages and Ruby version, or between a plug-in and Jekyll. I gave up trying to customize it and let it sit in dust.</p>

<p>But alas, itâ€™s high time the site gets a makeover. I cloned a local version of the site, and hereâ€™s a few simple things done to spruce it up.</p>

<p>For starters, I changed the avatar specified in <code class="language-plaintext highlighter-rouge">_config.yml</code> from the one imported from Github, to a specified one in the image folder <code class="language-plaintext highlighter-rouge">avatar: ../images/my_img.jpg</code>.</p>

<p>Then I added a new subsection to the site that would house projects. Iâ€™m sure thereâ€™s a multitude of ways how this can be achieved, but I simply filtered blog entries, and had them placed in either a <code class="language-plaintext highlighter-rouge">blog</code> section, or a <code class="language-plaintext highlighter-rouge">project section</code> based on categories.</p>

<ul>
  <li>Create two folders, <code class="language-plaintext highlighter-rouge">blog/_posts</code>, and <code class="language-plaintext highlighter-rouge">projects/_posts</code>, and move the relevant blog posts from <code class="language-plaintext highlighter-rouge">_posts</code> into their respective folders. Note that the folder name <code class="language-plaintext highlighter-rouge">_posts</code> is how the theme picks up the blog posts, and folder(s) of this name can be placed in the root folder or any number of subfolders. The folder <code class="language-plaintext highlighter-rouge">_posts</code> is no longer necessary.</li>
  <li>Add the label category to the top of every blog post page. You probably already have something like: <code class="language-plaintext highlighter-rouge">layout: post</code> specified. Now we need to add <code class="language-plaintext highlighter-rouge">category: blog</code> or <code class="language-plaintext highlighter-rouge">category: project</code> to each post in the two folders created above.</li>
  <li>In <code class="language-plaintext highlighter-rouge">_layouts/default.html</code>, add the nav menu item, in this case: <code class="language-plaintext highlighter-rouge">&lt;a href="/projects"&gt;Projects&lt;/a&gt;</code>. This will require we create the project page below.</li>
  <li>In the current menu configuration, the home page is configured by <code class="language-plaintext highlighter-rouge">index.html</code>. Since we had added the expectation of a new project page above, we need to create a <code class="language-plaintext highlighter-rouge">project.html</code> page.</li>
  <li>To allow filtering of content based on categories, we need to filter blog posts based on the relevant category. In the case of projects, we need to add <code class="language-plaintext highlighter-rouge">to the iteration of site posts. In the case of blog posts, we need to add</code>.</li>
</ul>
:ET